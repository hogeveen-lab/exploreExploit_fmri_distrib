#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Explore-Exploit fMRI: Neuron Paper
Finds participants with > 3 SD above the mean framewise displacement across task runs

author: jeremy hogeveen (jhogeveen@unm.edu)
last edit: March 9, 2022
"""

#%% PREAMBLE
# Importing modules for the script
import glob
import os
import pandas as pd
import numpy as np
import re
from scipy import stats

# setting up the filepaths
# dirs
script_dir = os.path.dirname(__file__)
base_dir = os.path.abspath(os.path.join(script_dir,'..'))
# filenames
confound_behave_filename = os.path.join(base_dir,'fmriprep/fmriprep/*/func/sub-p0*_task-bandit_run-*_desc-confounds_timeseries.tsv')
# getting the list of filenames we need to open in the series
confound_files = glob.glob(confound_behave_filename)
# motion cutoff
cutoff = 3
#%%

#%% looping through the confound files and pulling out mean FD by run
df_alldat = pd.DataFrame()
for i in range(0,len(confound_files)):
    ##### Step 1: Loading the data and generating the onset and conditions we need #####
    # Pulling the participant number we want to load
    pid_wildcard = re.compile('sub-p0..')
    cursub = pid_wildcard.findall(confound_files[i])
    # finding information about the run
    run_wildcard = re.compile('run-.')
    currun = run_wildcard.findall(confound_files[i])
    # Generating a pomdp filename
    confound_filename = [s for s in confound_files if cursub[0] in s]
    ### Reading in the data
    df = pd.read_csv(confound_filename[0],sep='\t')
    df_fd_tmp = df[["framewise_displacement"]]
    df_fd_tmp["pid"] = cursub[0]
    df_fd_tmp["run"] = currun[0]
    df_alldat = df_alldat.append(df_fd_tmp)
df_alldat = df_alldat.dropna()   
#%%

# %% getting the mean fd for each participant, separated by run
df_mean_fd = df_alldat.groupby(['pid'])['framewise_displacement'].mean().reset_index()

print('#### here are all the mean FD stats for this dataset: ####')
print(df_mean_fd)

print('#### outliers in the dataset based on mean framewise displacement > 3 SD above group: ####')
print(df_mean_fd[(np.abs(stats.zscore(df_mean_fd['framewise_displacement'])) > cutoff)])
# %%